/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apollo_project;

import com.placeholder.PlaceHolder;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Blob;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JFrame;
import javax.swing.JPanel;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.RowFilter;
import javax.swing.SpinnerDateModel;
import javax.swing.border.TitledBorder;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Student
 */
public class UserPanel extends javax.swing.JFrame {

    /**
     * Creates new form UserPanel
     */
    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rst = null;
    boolean right = false;
    boolean mright = false;
    String fileName = null;
    String imagePath = null;
    byte[] person_image = null;
    byte[] imgData = null;
    String attenddates;
    PlaceHolder holder;
    TableModel model;

    public UserPanel() {
        initComponents();
        tableData();
        AttendanceStudents();
        setHolder();

        setLocationRelativeTo(this);
        setTitle("User Panel");
        findStudents();
        findCompletedStudents();
        submitandUpdate.removeAll();
        submitandUpdate.repaint();
        submitandUpdate.revalidate();

        submitandUpdate.add(submit_panel);
        submitandUpdate.repaint();
        submitandUpdate.revalidate();

        setExtendedState(JFrame.MAXIMIZED_HORIZ);
        setResizable(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        buttonGroup2 = new javax.swing.ButtonGroup();
        leftMainPanel = new javax.swing.JPanel();
        userLabel = new javax.swing.JLabel();
        addStudentMenu = new javax.swing.JPanel();
        in_menuAddStudent = new javax.swing.JPanel();
        addStudentLabel = new javax.swing.JLabel();
        viewStudentMenu = new javax.swing.JPanel();
        in_menuViewStudent = new javax.swing.JPanel();
        viewStudentLabel = new javax.swing.JLabel();
        takeAttendanceMenu = new javax.swing.JPanel();
        in_menuTakeAttendance = new javax.swing.JPanel();
        takeAttendanceLabel = new javax.swing.JLabel();
        completedStudentsMenu = new javax.swing.JPanel();
        in_menuCompletedStudents = new javax.swing.JPanel();
        completedStudentsLabel = new javax.swing.JLabel();
        attendanceReportMenu = new javax.swing.JPanel();
        in_menuAttendanceReport = new javax.swing.JPanel();
        attendanceReportLabel = new javax.swing.JLabel();
        labelCardView = new javax.swing.JLabel();
        LabelCardView1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        Logout = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        UserPanelWindowClose = new javax.swing.JLabel();
        UserPanelWindowMinimize = new javax.swing.JLabel();
        top_Desktop = new javax.swing.JPanel();
        top_blank = new javax.swing.JPanel();
        top_addStudent = new javax.swing.JPanel();
        top_addStudentLabel = new javax.swing.JLabel();
        top_viewStudent = new javax.swing.JPanel();
        top_viewStudentLabel = new javax.swing.JLabel();
        top_takeAttendance = new javax.swing.JPanel();
        top_takeAttenedanceLabel = new javax.swing.JLabel();
        top_attendanceReport = new javax.swing.JPanel();
        top_attendanceReportLabel = new javax.swing.JLabel();
        top_completedStudents = new javax.swing.JPanel();
        top_completedStudentsLabel = new javax.swing.JLabel();
        Desktop = new javax.swing.JPanel();
        desk_Blank = new javax.swing.JPanel();
        desk_completed = new javax.swing.JPanel();
        desk_completedStudents = new javax.swing.JPanel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        completed_studentsTable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        completedRecordSearch_text = new javax.swing.JTextField();
        desk_addStudent = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        text_fatherName = new javax.swing.JTextField();
        text_firstName = new javax.swing.JTextField();
        firstname_label = new javax.swing.JLabel();
        fathersname_label1 = new javax.swing.JLabel();
        jDateChooser_dob = new com.toedter.calendar.JDateChooser();
        dob_label = new javax.swing.JLabel();
        text_qualification = new javax.swing.JTextField();
        qualification_label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area_address = new javax.swing.JTextArea();
        address_label = new javax.swing.JLabel();
        gender_panel = new javax.swing.JPanel();
        male_button = new javax.swing.JRadioButton();
        female_button = new javax.swing.JRadioButton();
        others_button = new javax.swing.JRadioButton();
        gender_label1 = new javax.swing.JLabel();
        text_mobileNo = new javax.swing.JTextField();
        mobile_label = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        reset_panel = new javax.swing.JPanel();
        resetLabel_Button = new javax.swing.JLabel();
        resetIcon_Button = new javax.swing.JLabel();
        submitandUpdate = new javax.swing.JPanel();
        submit_panel = new javax.swing.JPanel();
        submitLabel_Button = new javax.swing.JLabel();
        submitIcon_Button = new javax.swing.JLabel();
        Update_panel = new javax.swing.JPanel();
        updateLabel_Button = new javax.swing.JLabel();
        updateIcon_Button = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        students_table = new javax.swing.JTable();
        deleteLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        deleteLabel_button = new javax.swing.JLabel();
        search_text = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        text_courseName = new javax.swing.JTextField();
        course_label1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        text_duration = new javax.swing.JTextField();
        fastTrack_button = new javax.swing.JRadioButton();
        normalTrack_button = new javax.swing.JRadioButton();
        text_timing = new javax.swing.JTextField();
        course_label2 = new javax.swing.JLabel();
        text_reference = new javax.swing.JTextField();
        reference_label = new javax.swing.JLabel();
        kButton1 = new keeptoo.KButton();
        fathersname_label2 = new javax.swing.JLabel();
        text_staffname = new javax.swing.JTextField();
        desk_viewStudent = new javax.swing.JPanel();
        viewTopPanel = new javax.swing.JPanel();
        recordSerach_text = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        refresh_btn = new keeptoo.KButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        viewStudents_Table = new javax.swing.JTable();
        desk_takeAttendance = new javax.swing.JPanel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        attendanceSearch = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        attendanceTable = new javax.swing.JTable();
        getSelectRecord_button = new keeptoo.KButton();
        jLabel3 = new javax.swing.JLabel();
        desk_attendanceReport = new javax.swing.JPanel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        toDateText = new javax.swing.JTextField();
        fromDateText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        attendanceSearchButton = new keeptoo.KButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        attendanceReport_table = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        staffSearch_text = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusable(false);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(1100, 610));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        leftMainPanel.setBackground(new java.awt.Color(35, 3, 106));
        leftMainPanel.setPreferredSize(new java.awt.Dimension(160, 365));
        leftMainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userLabel.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        userLabel.setForeground(new java.awt.Color(255, 255, 255));
        userLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        leftMainPanel.add(userLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 40));

        addStudentMenu.setBackground(new java.awt.Color(35, 3, 106));

        in_menuAddStudent.setOpaque(false);
        in_menuAddStudent.setPreferredSize(new java.awt.Dimension(3, 50));

        javax.swing.GroupLayout in_menuAddStudentLayout = new javax.swing.GroupLayout(in_menuAddStudent);
        in_menuAddStudent.setLayout(in_menuAddStudentLayout);
        in_menuAddStudentLayout.setHorizontalGroup(
            in_menuAddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        in_menuAddStudentLayout.setVerticalGroup(
            in_menuAddStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        addStudentLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        addStudentLabel.setForeground(new java.awt.Color(255, 255, 255));
        addStudentLabel.setText("Add Student");
        addStudentLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                addStudentLabelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout addStudentMenuLayout = new javax.swing.GroupLayout(addStudentMenu);
        addStudentMenu.setLayout(addStudentMenuLayout);
        addStudentMenuLayout.setHorizontalGroup(
            addStudentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentMenuLayout.createSequentialGroup()
                .addComponent(in_menuAddStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addStudentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
        );
        addStudentMenuLayout.setVerticalGroup(
            addStudentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentMenuLayout.createSequentialGroup()
                .addGroup(addStudentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(addStudentLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(in_menuAddStudent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        leftMainPanel.add(addStudentMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 190, 50));

        viewStudentMenu.setBackground(new java.awt.Color(35, 3, 106));

        in_menuViewStudent.setOpaque(false);
        in_menuViewStudent.setPreferredSize(new java.awt.Dimension(3, 50));

        javax.swing.GroupLayout in_menuViewStudentLayout = new javax.swing.GroupLayout(in_menuViewStudent);
        in_menuViewStudent.setLayout(in_menuViewStudentLayout);
        in_menuViewStudentLayout.setHorizontalGroup(
            in_menuViewStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        in_menuViewStudentLayout.setVerticalGroup(
            in_menuViewStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        viewStudentLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        viewStudentLabel.setForeground(new java.awt.Color(255, 255, 255));
        viewStudentLabel.setText("View Student");
        viewStudentLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                viewStudentLabelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout viewStudentMenuLayout = new javax.swing.GroupLayout(viewStudentMenu);
        viewStudentMenu.setLayout(viewStudentMenuLayout);
        viewStudentMenuLayout.setHorizontalGroup(
            viewStudentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewStudentMenuLayout.createSequentialGroup()
                .addComponent(in_menuViewStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewStudentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
        );
        viewStudentMenuLayout.setVerticalGroup(
            viewStudentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewStudentMenuLayout.createSequentialGroup()
                .addGroup(viewStudentMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(viewStudentLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(in_menuViewStudent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        leftMainPanel.add(viewStudentMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 190, -1));

        takeAttendanceMenu.setBackground(new java.awt.Color(35, 3, 106));

        in_menuTakeAttendance.setOpaque(false);
        in_menuTakeAttendance.setPreferredSize(new java.awt.Dimension(3, 50));

        javax.swing.GroupLayout in_menuTakeAttendanceLayout = new javax.swing.GroupLayout(in_menuTakeAttendance);
        in_menuTakeAttendance.setLayout(in_menuTakeAttendanceLayout);
        in_menuTakeAttendanceLayout.setHorizontalGroup(
            in_menuTakeAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        in_menuTakeAttendanceLayout.setVerticalGroup(
            in_menuTakeAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        takeAttendanceLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        takeAttendanceLabel.setForeground(new java.awt.Color(255, 255, 255));
        takeAttendanceLabel.setText("Take Attendance");
        takeAttendanceLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                takeAttendanceLabelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout takeAttendanceMenuLayout = new javax.swing.GroupLayout(takeAttendanceMenu);
        takeAttendanceMenu.setLayout(takeAttendanceMenuLayout);
        takeAttendanceMenuLayout.setHorizontalGroup(
            takeAttendanceMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(takeAttendanceMenuLayout.createSequentialGroup()
                .addComponent(in_menuTakeAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(takeAttendanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
        );
        takeAttendanceMenuLayout.setVerticalGroup(
            takeAttendanceMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(takeAttendanceMenuLayout.createSequentialGroup()
                .addGroup(takeAttendanceMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(takeAttendanceLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(in_menuTakeAttendance, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        leftMainPanel.add(takeAttendanceMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 190, -1));

        completedStudentsMenu.setBackground(new java.awt.Color(35, 3, 106));

        in_menuCompletedStudents.setOpaque(false);
        in_menuCompletedStudents.setPreferredSize(new java.awt.Dimension(3, 50));

        javax.swing.GroupLayout in_menuCompletedStudentsLayout = new javax.swing.GroupLayout(in_menuCompletedStudents);
        in_menuCompletedStudents.setLayout(in_menuCompletedStudentsLayout);
        in_menuCompletedStudentsLayout.setHorizontalGroup(
            in_menuCompletedStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        in_menuCompletedStudentsLayout.setVerticalGroup(
            in_menuCompletedStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        completedStudentsLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        completedStudentsLabel.setForeground(new java.awt.Color(255, 255, 255));
        completedStudentsLabel.setText("Completed Students");
        completedStudentsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                completedStudentsLabelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout completedStudentsMenuLayout = new javax.swing.GroupLayout(completedStudentsMenu);
        completedStudentsMenu.setLayout(completedStudentsMenuLayout);
        completedStudentsMenuLayout.setHorizontalGroup(
            completedStudentsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(completedStudentsMenuLayout.createSequentialGroup()
                .addComponent(in_menuCompletedStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(completedStudentsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
        );
        completedStudentsMenuLayout.setVerticalGroup(
            completedStudentsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(completedStudentsMenuLayout.createSequentialGroup()
                .addGroup(completedStudentsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(completedStudentsLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(in_menuCompletedStudents, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        leftMainPanel.add(completedStudentsMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 190, -1));

        attendanceReportMenu.setBackground(new java.awt.Color(35, 3, 106));

        in_menuAttendanceReport.setOpaque(false);
        in_menuAttendanceReport.setPreferredSize(new java.awt.Dimension(3, 50));

        javax.swing.GroupLayout in_menuAttendanceReportLayout = new javax.swing.GroupLayout(in_menuAttendanceReport);
        in_menuAttendanceReport.setLayout(in_menuAttendanceReportLayout);
        in_menuAttendanceReportLayout.setHorizontalGroup(
            in_menuAttendanceReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );
        in_menuAttendanceReportLayout.setVerticalGroup(
            in_menuAttendanceReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        attendanceReportLabel.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        attendanceReportLabel.setForeground(new java.awt.Color(255, 255, 255));
        attendanceReportLabel.setText("Attendance Report");
        attendanceReportLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                attendanceReportLabelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout attendanceReportMenuLayout = new javax.swing.GroupLayout(attendanceReportMenu);
        attendanceReportMenu.setLayout(attendanceReportMenuLayout);
        attendanceReportMenuLayout.setHorizontalGroup(
            attendanceReportMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendanceReportMenuLayout.createSequentialGroup()
                .addComponent(in_menuAttendanceReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(attendanceReportLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
        );
        attendanceReportMenuLayout.setVerticalGroup(
            attendanceReportMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(attendanceReportMenuLayout.createSequentialGroup()
                .addGroup(attendanceReportMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(attendanceReportLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(in_menuAttendanceReport, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        leftMainPanel.add(attendanceReportMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 190, -1));

        labelCardView.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        labelCardView.setForeground(new java.awt.Color(187, 134, 252));
        leftMainPanel.add(labelCardView, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 70, 30));

        LabelCardView1.setFont(new java.awt.Font("Times New Roman", 2, 12)); // NOI18N
        LabelCardView1.setForeground(new java.awt.Color(242, 231, 254));
        leftMainPanel.add(LabelCardView1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 110, 30));
        leftMainPanel.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 190, -1));
        leftMainPanel.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 190, -1));

        Logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-login-30.png"))); // NOI18N
        Logout.setToolTipText("Click here to logout..");
        Logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                LogoutMousePressed(evt);
            }
        });
        leftMainPanel.add(Logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, -1, -1));

        getContentPane().add(leftMainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 610));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(127, 57, 251));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel3MousePressed(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        UserPanelWindowClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-multiply-20.png"))); // NOI18N
        UserPanelWindowClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UserPanelWindowCloseMousePressed(evt);
            }
        });
        jPanel3.add(UserPanelWindowClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 10, 20, -1));

        UserPanelWindowMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-minimize-20.png"))); // NOI18N
        UserPanelWindowMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UserPanelWindowMinimizeMousePressed(evt);
            }
        });
        jPanel3.add(UserPanelWindowMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 10, -1, -1));

        top_Desktop.setBackground(new java.awt.Color(127, 57, 251));
        top_Desktop.setLayout(new java.awt.CardLayout());

        top_blank.setBackground(new java.awt.Color(127, 57, 251));

        javax.swing.GroupLayout top_blankLayout = new javax.swing.GroupLayout(top_blank);
        top_blank.setLayout(top_blankLayout);
        top_blankLayout.setHorizontalGroup(
            top_blankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );
        top_blankLayout.setVerticalGroup(
            top_blankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        top_Desktop.add(top_blank, "card2");

        top_addStudent.setBackground(new java.awt.Color(127, 57, 251));

        top_addStudentLabel.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        top_addStudentLabel.setForeground(new java.awt.Color(255, 255, 255));
        top_addStudentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        top_addStudentLabel.setText("ADD STUDENT");

        javax.swing.GroupLayout top_addStudentLayout = new javax.swing.GroupLayout(top_addStudent);
        top_addStudent.setLayout(top_addStudentLayout);
        top_addStudentLayout.setHorizontalGroup(
            top_addStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(top_addStudentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );
        top_addStudentLayout.setVerticalGroup(
            top_addStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(top_addStudentLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        top_Desktop.add(top_addStudent, "card3");

        top_viewStudent.setBackground(new java.awt.Color(127, 57, 251));

        top_viewStudentLabel.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        top_viewStudentLabel.setForeground(new java.awt.Color(255, 255, 255));
        top_viewStudentLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        top_viewStudentLabel.setText("VIEW STUDENT");

        javax.swing.GroupLayout top_viewStudentLayout = new javax.swing.GroupLayout(top_viewStudent);
        top_viewStudent.setLayout(top_viewStudentLayout);
        top_viewStudentLayout.setHorizontalGroup(
            top_viewStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(top_viewStudentLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );
        top_viewStudentLayout.setVerticalGroup(
            top_viewStudentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(top_viewStudentLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        top_Desktop.add(top_viewStudent, "card4");

        top_takeAttendance.setBackground(new java.awt.Color(127, 57, 251));

        top_takeAttenedanceLabel.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        top_takeAttenedanceLabel.setForeground(new java.awt.Color(255, 255, 255));
        top_takeAttenedanceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        top_takeAttenedanceLabel.setText("TAKE  ATTENDANCE");

        javax.swing.GroupLayout top_takeAttendanceLayout = new javax.swing.GroupLayout(top_takeAttendance);
        top_takeAttendance.setLayout(top_takeAttendanceLayout);
        top_takeAttendanceLayout.setHorizontalGroup(
            top_takeAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(top_takeAttenedanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );
        top_takeAttendanceLayout.setVerticalGroup(
            top_takeAttendanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(top_takeAttenedanceLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        top_Desktop.add(top_takeAttendance, "card5");

        top_attendanceReport.setBackground(new java.awt.Color(127, 57, 251));

        top_attendanceReportLabel.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        top_attendanceReportLabel.setForeground(new java.awt.Color(255, 255, 255));
        top_attendanceReportLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        top_attendanceReportLabel.setText("ATTENDANCE  REPORT");

        javax.swing.GroupLayout top_attendanceReportLayout = new javax.swing.GroupLayout(top_attendanceReport);
        top_attendanceReport.setLayout(top_attendanceReportLayout);
        top_attendanceReportLayout.setHorizontalGroup(
            top_attendanceReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(top_attendanceReportLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );
        top_attendanceReportLayout.setVerticalGroup(
            top_attendanceReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(top_attendanceReportLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        top_Desktop.add(top_attendanceReport, "card6");

        top_completedStudents.setBackground(new java.awt.Color(127, 57, 251));

        top_completedStudentsLabel.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        top_completedStudentsLabel.setForeground(new java.awt.Color(255, 255, 255));
        top_completedStudentsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        top_completedStudentsLabel.setText("COMPLETED STUDENTS");

        javax.swing.GroupLayout top_completedStudentsLayout = new javax.swing.GroupLayout(top_completedStudents);
        top_completedStudents.setLayout(top_completedStudentsLayout);
        top_completedStudentsLayout.setHorizontalGroup(
            top_completedStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(top_completedStudentsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );
        top_completedStudentsLayout.setVerticalGroup(
            top_completedStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(top_completedStudentsLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        top_Desktop.add(top_completedStudents, "card6");

        jPanel3.add(top_Desktop, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 460, 50));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 51));

        Desktop.setBackground(new java.awt.Color(255, 255, 255));
        Desktop.setLayout(new java.awt.CardLayout());

        desk_Blank.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout desk_BlankLayout = new javax.swing.GroupLayout(desk_Blank);
        desk_Blank.setLayout(desk_BlankLayout);
        desk_BlankLayout.setHorizontalGroup(
            desk_BlankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 980, Short.MAX_VALUE)
        );
        desk_BlankLayout.setVerticalGroup(
            desk_BlankLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );

        Desktop.add(desk_Blank, "card2");

        desk_completed.setBackground(new java.awt.Color(255, 255, 255));

        desk_completedStudents.setBackground(new java.awt.Color(255, 255, 255));

        kGradientPanel3.setkEndColor(new java.awt.Color(0, 0, 102));
        kGradientPanel3.setkStartColor(new java.awt.Color(51, 51, 255));
        kGradientPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        completed_studentsTable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        completed_studentsTable.setForeground(new java.awt.Color(0, 51, 153));
        completed_studentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        completed_studentsTable.setGridColor(new java.awt.Color(255, 255, 255));
        completed_studentsTable.setRowHeight(20);
        completed_studentsTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        completed_studentsTable.setSelectionForeground(new java.awt.Color(0, 51, 153));
        jScrollPane6.setViewportView(completed_studentsTable);

        kGradientPanel3.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 890, 450));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Search here !..");
        kGradientPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 11, 120, 51));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-handright.png"))); // NOI18N
        kGradientPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(614, 11, 52, 51));

        completedRecordSearch_text.setBackground(new Color(0,0,0,0));
        completedRecordSearch_text.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        completedRecordSearch_text.setForeground(new java.awt.Color(255, 255, 255));
        completedRecordSearch_text.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        completedRecordSearch_text.setCaretColor(new java.awt.Color(255, 255, 255));
        completedRecordSearch_text.setOpaque(false);
        completedRecordSearch_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                completedRecordSearch_textKeyReleased(evt);
            }
        });
        kGradientPanel3.add(completedRecordSearch_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 20, 210, 40));

        javax.swing.GroupLayout desk_completedStudentsLayout = new javax.swing.GroupLayout(desk_completedStudents);
        desk_completedStudents.setLayout(desk_completedStudentsLayout);
        desk_completedStudentsLayout.setHorizontalGroup(
            desk_completedStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desk_completedStudentsLayout.createSequentialGroup()
                .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 979, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        desk_completedStudentsLayout.setVerticalGroup(
            desk_completedStudentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout desk_completedLayout = new javax.swing.GroupLayout(desk_completed);
        desk_completed.setLayout(desk_completedLayout);
        desk_completedLayout.setHorizontalGroup(
            desk_completedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desk_completedStudents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        desk_completedLayout.setVerticalGroup(
            desk_completedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, desk_completedLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(desk_completedStudents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        Desktop.add(desk_completed, "card2");

        desk_addStudent.setBackground(new java.awt.Color(255, 255, 255));
        desk_addStudent.setPreferredSize(new java.awt.Dimension(962, 560));
        desk_addStudent.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(255, 0, 51))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        text_fatherName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        text_fatherName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Father's Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel1.add(text_fatherName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 220, 50));

        text_firstName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        text_firstName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel1.add(text_firstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 220, 50));

        firstname_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-contacts-filled-30.png"))); // NOI18N
        jPanel1.add(firstname_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 30, 30));

        fathersname_label1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-administrator-male-30.png"))); // NOI18N
        jPanel1.add(fathersname_label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 30, 30));

        jDateChooser_dob.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser_dob.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DOB", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N
        jDateChooser_dob.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jPanel1.add(jDateChooser_dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 220, 60));

        dob_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-planner-30.png"))); // NOI18N
        jPanel1.add(dob_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 30, 30));

        text_qualification.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        text_qualification.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Qualification", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel1.add(text_qualification, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 220, 50));

        qualification_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-world-cup-filled-30.png"))); // NOI18N
        jPanel1.add(qualification_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 30, 30));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Address", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N

        area_address.setColumns(20);
        area_address.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        area_address.setRows(5);
        jScrollPane1.setViewportView(area_address);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 220, 80));

        address_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-location-30.png"))); // NOI18N
        jPanel1.add(address_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 30, 30));

        gender_panel.setBackground(new java.awt.Color(255, 255, 255));
        gender_panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gender", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(255, 0, 51))); // NOI18N

        male_button.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(male_button);
        male_button.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        male_button.setText("Male");

        female_button.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(female_button);
        female_button.setText("Female");

        others_button.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(others_button);
        others_button.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        others_button.setText("Other's");

        javax.swing.GroupLayout gender_panelLayout = new javax.swing.GroupLayout(gender_panel);
        gender_panel.setLayout(gender_panelLayout);
        gender_panelLayout.setHorizontalGroup(
            gender_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gender_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(male_button, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(female_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(others_button, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gender_panelLayout.setVerticalGroup(
            gender_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gender_panelLayout.createSequentialGroup()
                .addGroup(gender_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(male_button, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(others_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(female_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.add(gender_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 220, 60));

        gender_label1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-collaboration-female-male-30.png"))); // NOI18N
        jPanel1.add(gender_label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 30, 30));

        text_mobileNo.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        text_mobileNo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mobile Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel1.add(text_mobileNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 220, 50));

        mobile_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-phone-30.png"))); // NOI18N
        jPanel1.add(mobile_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 30, 30));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        reset_panel.setBackground(new java.awt.Color(255, 0, 51));

        resetLabel_Button.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        resetLabel_Button.setForeground(new java.awt.Color(255, 255, 255));
        resetLabel_Button.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resetLabel_Button.setText("Reset");
        resetLabel_Button.setToolTipText("");
        resetLabel_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetLabel_ButtonMouseClicked(evt);
            }
        });

        resetIcon_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-reset.png"))); // NOI18N
        resetIcon_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetIcon_ButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout reset_panelLayout = new javax.swing.GroupLayout(reset_panel);
        reset_panel.setLayout(reset_panelLayout);
        reset_panelLayout.setHorizontalGroup(
            reset_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reset_panelLayout.createSequentialGroup()
                .addComponent(resetLabel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetIcon_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        reset_panelLayout.setVerticalGroup(
            reset_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reset_panelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(resetLabel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reset_panelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resetIcon_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        submitandUpdate.setLayout(new java.awt.CardLayout());

        submit_panel.setBackground(new java.awt.Color(0, 102, 102));

        submitLabel_Button.setBackground(new java.awt.Color(255, 255, 255));
        submitLabel_Button.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        submitLabel_Button.setForeground(new java.awt.Color(255, 255, 255));
        submitLabel_Button.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        submitLabel_Button.setText("Submit");
        submitLabel_Button.setToolTipText("");
        submitLabel_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitLabel_ButtonMouseClicked(evt);
            }
        });

        submitIcon_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-submit-progress-30.png"))); // NOI18N

        javax.swing.GroupLayout submit_panelLayout = new javax.swing.GroupLayout(submit_panel);
        submit_panel.setLayout(submit_panelLayout);
        submit_panelLayout.setHorizontalGroup(
            submit_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(submit_panelLayout.createSequentialGroup()
                .addComponent(submitLabel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(submitIcon_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );
        submit_panelLayout.setVerticalGroup(
            submit_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, submit_panelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(submit_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitLabel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitIcon_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        submitandUpdate.add(submit_panel, "card2");

        Update_panel.setBackground(new java.awt.Color(0, 102, 102));

        updateLabel_Button.setBackground(new java.awt.Color(255, 255, 255));
        updateLabel_Button.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        updateLabel_Button.setForeground(new java.awt.Color(255, 255, 255));
        updateLabel_Button.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updateLabel_Button.setText("Update");
        updateLabel_Button.setToolTipText("");
        updateLabel_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateLabel_ButtonMouseClicked(evt);
            }
        });

        updateIcon_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-submit-progress-30.png"))); // NOI18N
        updateIcon_Button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateIcon_ButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Update_panelLayout = new javax.swing.GroupLayout(Update_panel);
        Update_panel.setLayout(Update_panelLayout);
        Update_panelLayout.setHorizontalGroup(
            Update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Update_panelLayout.createSequentialGroup()
                .addComponent(updateLabel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateIcon_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );
        Update_panelLayout.setVerticalGroup(
            Update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Update_panelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(Update_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateLabel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateIcon_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        submitandUpdate.add(Update_panel, "card2");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(reset_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitandUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(reset_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(submitandUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, 270, 40));

        desk_addStudent.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 290, 560));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student's Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(255, 0, 51))); // NOI18N
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        students_table.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        students_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        students_table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        students_table.setGridColor(new java.awt.Color(204, 204, 255));
        students_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                students_tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(students_table);

        jPanel6.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 24, 598, 215));

        deleteLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        deleteLabel.setForeground(new java.awt.Color(255, 0, 0));
        deleteLabel.setText("Click here to delete records..!");
        jPanel6.add(deleteLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 250, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-forward-24.png"))); // NOI18N
        jPanel6.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(466, 245, 19, 19));

        deleteLabel_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-recycle-bin-30.png"))); // NOI18N
        deleteLabel_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteLabel_buttonMouseClicked(evt);
            }
        });
        jPanel6.add(deleteLabel_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(518, 245, -1, 28));

        search_text.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        search_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_textKeyReleased(evt);
            }
        });
        jPanel6.add(search_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(49, 245, 151, -1));

        desk_addStudent.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, 610, 290));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Course Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 18), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        text_courseName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        text_courseName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Course Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N
        text_courseName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_courseNameActionPerformed(evt);
            }
        });
        jPanel8.add(text_courseName, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 221, 50));

        course_label1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-singing-30.png"))); // NOI18N
        jPanel8.add(course_label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 47, -1, -1));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Duration & Time Track", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(255, 0, 51))); // NOI18N

        text_duration.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        text_duration.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Duration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        fastTrack_button.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(fastTrack_button);
        fastTrack_button.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fastTrack_button.setText("F");

        normalTrack_button.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup2.add(normalTrack_button);
        normalTrack_button.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        normalTrack_button.setSelected(true);
        normalTrack_button.setText("N");

        text_timing.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        text_timing.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Timing", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(51, 51, 51))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(fastTrack_button, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(normalTrack_button, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
            .addComponent(text_timing)
            .addComponent(text_duration)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(text_duration, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text_timing, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(normalTrack_button, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fastTrack_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel8.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(343, 35, -1, -1));

        course_label2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-time.png"))); // NOI18N
        jPanel8.add(course_label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 43, -1, -1));

        text_reference.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        text_reference.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reference Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N
        text_reference.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_referenceKeyReleased(evt);
            }
        });
        jPanel8.add(text_reference, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 121, 156, 52));

        reference_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-form.png"))); // NOI18N
        jPanel8.add(reference_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 132, -1, -1));

        kButton1.setText("CHECK");
        kButton1.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        kButton1.setkBackGroundColor(new java.awt.Color(0, 255, 0));
        kButton1.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        kButton1.setkHoverStartColor(new java.awt.Color(0, 153, 153));
        kButton1.setkIndicatorThickness(0);
        kButton1.setkSelectedColor(new java.awt.Color(0, 255, 0));
        kButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kButton1MouseClicked(evt);
            }
        });
        jPanel8.add(kButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 90, 40));

        fathersname_label2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-administrator-male-30.png"))); // NOI18N
        jPanel8.add(fathersname_label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 30, 30));

        text_staffname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        text_staffname.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Staff Name", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(255, 0, 0))); // NOI18N
        jPanel8.add(text_staffname, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 220, 50));

        desk_addStudent.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 300, 610, 260));

        Desktop.add(desk_addStudent, "card2");

        desk_viewStudent.setBackground(new java.awt.Color(204, 204, 255));
        desk_viewStudent.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(0, 153, 153), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));
        desk_viewStudent.setPreferredSize(new java.awt.Dimension(962, 560));
        desk_viewStudent.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewTopPanel.setBackground(new java.awt.Color(35, 3, 106));
        viewTopPanel.setForeground(new java.awt.Color(255, 255, 255));
        viewTopPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        recordSerach_text.setBackground(new Color(0,0,0,0));
        recordSerach_text.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        recordSerach_text.setForeground(new java.awt.Color(255, 255, 255));
        recordSerach_text.setToolTipText("");
        recordSerach_text.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(204, 204, 204)));
        recordSerach_text.setCaretColor(new java.awt.Color(255, 255, 255));
        recordSerach_text.setOpaque(false);
        recordSerach_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordSerach_textActionPerformed(evt);
            }
        });
        recordSerach_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                recordSerach_textKeyReleased(evt);
            }
        });
        viewTopPanel.add(recordSerach_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(684, 11, 209, 51));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Search here !..");
        viewTopPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 11, 120, 51));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-handright.png"))); // NOI18N
        viewTopPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(614, 11, 52, 51));

        refresh_btn.setText("Refresh Data");
        refresh_btn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        refresh_btn.setkBackGroundColor(new java.awt.Color(102, 255, 255));
        refresh_btn.setkBorderRadius(40);
        refresh_btn.setkEndColor(new java.awt.Color(0, 255, 255));
        refresh_btn.setkFillButton(false);
        refresh_btn.setkHoverEndColor(new java.awt.Color(255, 255, 255));
        refresh_btn.setkHoverStartColor(new java.awt.Color(0, 255, 255));
        refresh_btn.setkIndicatorThickness(0);
        refresh_btn.setkStartColor(new java.awt.Color(255, 255, 255));
        refresh_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh_btnMouseClicked(evt);
            }
        });
        viewTopPanel.add(refresh_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 11, -1, -1));

        desk_viewStudent.add(viewTopPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 960, 70));

        viewStudents_Table.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        viewStudents_Table.setForeground(new java.awt.Color(51, 51, 51));
        viewStudents_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        viewStudents_Table.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        viewStudents_Table.setGridColor(new java.awt.Color(255, 255, 255));
        viewStudents_Table.setRowHeight(20);
        viewStudents_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewStudents_TableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(viewStudents_Table);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 906, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                .addContainerGap())
        );

        desk_viewStudent.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 960, 490));

        Desktop.add(desk_viewStudent, "card2");

        desk_takeAttendance.setBackground(new java.awt.Color(204, 204, 255));
        desk_takeAttendance.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel2.setkEndColor(new java.awt.Color(127, 57, 251));
        kGradientPanel2.setkStartColor(new java.awt.Color(255, 255, 255));
        kGradientPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        attendanceSearch.setBackground(new Color(0,0,0,0));
        attendanceSearch.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        attendanceSearch.setForeground(new java.awt.Color(51, 51, 51));
        attendanceSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 102)));
        attendanceSearch.setOpaque(false);
        attendanceSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                attendanceSearchKeyReleased(evt);
            }
        });
        kGradientPanel2.add(attendanceSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 20, 210, 43));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 102));
        jLabel8.setText("Search here !..");
        kGradientPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-handright.png"))); // NOI18N
        kGradientPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, -1, -1));

        attendanceTable.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        attendanceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        attendanceTable.setGridColor(new java.awt.Color(255, 255, 255));
        attendanceTable.setRowHeight(20);
        attendanceTable.setSelectionBackground(new java.awt.Color(127, 57, 251));
        jScrollPane4.setViewportView(attendanceTable);

        kGradientPanel2.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 900, 420));

        getSelectRecord_button.setText("Get Selected");
        getSelectRecord_button.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        getSelectRecord_button.setkAllowTab(false);
        getSelectRecord_button.setkBackGroundColor(new java.awt.Color(0, 102, 102));
        getSelectRecord_button.setkBorderRadius(40);
        getSelectRecord_button.setkEndColor(new java.awt.Color(0, 102, 102));
        getSelectRecord_button.setkHoverEndColor(new java.awt.Color(0, 204, 204));
        getSelectRecord_button.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        getSelectRecord_button.setkHoverStartColor(new java.awt.Color(0, 102, 102));
        getSelectRecord_button.setkIndicatorThickness(0);
        getSelectRecord_button.setkSelectedColor(new java.awt.Color(0, 102, 102));
        getSelectRecord_button.setkStartColor(new java.awt.Color(0, 204, 204));
        getSelectRecord_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                getSelectRecord_buttonMouseClicked(evt);
            }
        });
        kGradientPanel2.add(getSelectRecord_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 510, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("NOTE : Select the students to mark them ' ABSENT ' ");
        kGradientPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 520, -1, -1));

        desk_takeAttendance.add(kGradientPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 560));

        Desktop.add(desk_takeAttendance, "card2");

        desk_attendanceReport.setBackground(new java.awt.Color(255, 255, 255));
        desk_attendanceReport.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel1.setBackground(new Color(0,0,0,0));
        kGradientPanel1.setkEndColor(new java.awt.Color(0, 0, 102));
        kGradientPanel1.setkStartColor(new java.awt.Color(51, 51, 255));
        kGradientPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        toDateText.setBackground(new Color(0,0,0,0));
        toDateText.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        toDateText.setForeground(new java.awt.Color(255, 255, 255));
        toDateText.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        toDateText.setCaretColor(new java.awt.Color(255, 255, 255));
        toDateText.setOpaque(false);
        toDateText.setSelectedTextColor(new java.awt.Color(0, 0, 153));
        toDateText.setSelectionColor(new java.awt.Color(204, 204, 204));
        kGradientPanel1.add(toDateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 30, 200, 40));

        fromDateText.setBackground(new Color(0,0,0,0));
        fromDateText.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        fromDateText.setForeground(new java.awt.Color(255, 255, 255));
        fromDateText.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        fromDateText.setCaretColor(new java.awt.Color(255, 255, 255));
        fromDateText.setOpaque(false);
        fromDateText.setSelectedTextColor(new java.awt.Color(0, 0, 153));
        fromDateText.setSelectionColor(new java.awt.Color(204, 204, 204));
        kGradientPanel1.add(fromDateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 200, 40));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("To Date");
        kGradientPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, -1, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(204, 204, 204));
        jLabel10.setText("Staff Name");
        kGradientPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        attendanceSearchButton.setText("Search");
        attendanceSearchButton.setFont(new java.awt.Font("Lucida Calligraphy", 3, 18)); // NOI18N
        attendanceSearchButton.setkBackGroundColor(new java.awt.Color(0, 0, 255));
        attendanceSearchButton.setkBorderRadius(40);
        attendanceSearchButton.setkEndColor(new java.awt.Color(255, 255, 255));
        attendanceSearchButton.setkHoverEndColor(new java.awt.Color(0, 0, 255));
        attendanceSearchButton.setkHoverStartColor(new java.awt.Color(255, 255, 255));
        attendanceSearchButton.setkIndicatorThickness(0);
        attendanceSearchButton.setkSelectedColor(new java.awt.Color(51, 51, 255));
        attendanceSearchButton.setkStartColor(new java.awt.Color(0, 0, 255));
        attendanceSearchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attendanceSearchButtonMouseClicked(evt);
            }
        });
        kGradientPanel1.add(attendanceSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 20, 130, -1));

        attendanceReport_table.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        attendanceReport_table.setForeground(new java.awt.Color(0, 51, 153));
        attendanceReport_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        attendanceReport_table.setGridColor(new java.awt.Color(255, 255, 255));
        attendanceReport_table.setRowHeight(20);
        attendanceReport_table.setSelectionBackground(new java.awt.Color(0, 51, 255));
        jScrollPane5.setViewportView(attendanceReport_table);

        kGradientPanel1.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 900, 450));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("( dd/mm/yyyy )");
        kGradientPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 20, -1, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("( dd/mm/yyyy )");
        kGradientPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, -1, -1));

        staffSearch_text.setBackground(new Color(0,0,0,0));
        staffSearch_text.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        staffSearch_text.setForeground(new java.awt.Color(255, 255, 255));
        staffSearch_text.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        staffSearch_text.setCaretColor(new java.awt.Color(255, 255, 255));
        staffSearch_text.setOpaque(false);
        kGradientPanel1.add(staffSearch_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 190, 40));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(204, 204, 204));
        jLabel15.setText("From Date");
        kGradientPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        desk_attendanceReport.add(kGradientPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 560));

        Desktop.add(desk_attendanceReport, "card2");

        jPanel2.add(Desktop, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 49, -1, 560));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 920, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UserPanelWindowMinimizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserPanelWindowMinimizeMousePressed
        setExtendedState(JFrame.ICONIFIED);
    }//GEN-LAST:event_UserPanelWindowMinimizeMousePressed

    private void UserPanelWindowCloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserPanelWindowCloseMousePressed

        int p = JOptionPane.showConfirmDialog(null, "Do you want to logut", "Logout", JOptionPane.YES_NO_OPTION);
        if (p == JOptionPane.YES_OPTION) {
            super.dispose();
            new Home().setVisible(true);
        } else {
            remove(p);
        }

    }//GEN-LAST:event_UserPanelWindowCloseMousePressed

    private void LogoutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutMousePressed
        // TODO add your handling code here:
        int p = JOptionPane.showConfirmDialog(null, "Do you want to logut", "Logout", JOptionPane.YES_NO_OPTION);
        if (p == JOptionPane.YES_OPTION) {
            super.dispose();
            new Home().setVisible(true);
        } else {
            remove(p);
        }
    }//GEN-LAST:event_LogoutMousePressed

    private void addStudentLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addStudentLabelMousePressed

        setColor(addStudentMenu);
        in_menuAddStudent.setOpaque(true);
        restColor(new JPanel[]{viewStudentMenu, takeAttendanceMenu, completedStudentsMenu, attendanceReportMenu},
                new JPanel[]{in_menuViewStudent, in_menuTakeAttendance, in_menuCompletedStudents, in_menuAttendanceReport});
        LabelCardView1.setText("/ Add Student");

        Desktop.removeAll();
        Desktop.repaint();
        Desktop.revalidate();

        Desktop.add(desk_addStudent);
        Desktop.repaint();
        Desktop.revalidate();

        top_Desktop.removeAll();
        top_Desktop.repaint();
        top_Desktop.revalidate();

        top_Desktop.add(top_addStudent);
        top_Desktop.repaint();
        top_Desktop.revalidate();

        findStudents();
    }//GEN-LAST:event_addStudentLabelMousePressed

    private void viewStudentLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewStudentLabelMousePressed

        setColor(viewStudentMenu);
        in_menuViewStudent.setOpaque(true);
        restColor(new JPanel[]{addStudentMenu, takeAttendanceMenu, completedStudentsMenu, attendanceReportMenu},
                new JPanel[]{in_menuAddStudent, in_menuTakeAttendance, in_menuCompletedStudents, in_menuAttendanceReport});
        LabelCardView1.setText("/ View Student");

        Desktop.removeAll();
        Desktop.repaint();
        Desktop.revalidate();

        Desktop.add(desk_viewStudent);
        Desktop.repaint();
        Desktop.revalidate();

        top_Desktop.removeAll();
        top_Desktop.repaint();
        top_Desktop.revalidate();

        top_Desktop.add(top_viewStudent);
        top_Desktop.repaint();
        top_Desktop.revalidate();

    }//GEN-LAST:event_viewStudentLabelMousePressed

    private void takeAttendanceLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_takeAttendanceLabelMousePressed
        AttendanceStudents();
        setColor(takeAttendanceMenu);
        in_menuTakeAttendance.setOpaque(true);
        restColor(new JPanel[]{addStudentMenu, viewStudentMenu, completedStudentsMenu, attendanceReportMenu},
                new JPanel[]{in_menuAddStudent, in_menuViewStudent, in_menuCompletedStudents, in_menuAttendanceReport});
        LabelCardView1.setText("/ Take Attendance");

        Desktop.removeAll();
        Desktop.repaint();
        Desktop.revalidate();

        Desktop.add(desk_takeAttendance);
        Desktop.repaint();
        Desktop.revalidate();

        top_Desktop.removeAll();
        top_Desktop.repaint();
        top_Desktop.revalidate();

        top_Desktop.add(top_takeAttendance);
        top_Desktop.repaint();
        top_Desktop.revalidate();
        setdate();
    }//GEN-LAST:event_takeAttendanceLabelMousePressed

    private void attendanceReportLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendanceReportLabelMousePressed
        setColor(attendanceReportMenu);
        in_menuAttendanceReport.setOpaque(true);
        restColor(new JPanel[]{addStudentMenu, viewStudentMenu, completedStudentsMenu, takeAttendanceMenu},
                new JPanel[]{in_menuAddStudent, in_menuViewStudent, in_menuCompletedStudents, in_menuTakeAttendance});
        LabelCardView1.setText("/ Attendance Report");

        Desktop.removeAll();
        Desktop.repaint();
        Desktop.revalidate();

        Desktop.add(desk_attendanceReport);
        Desktop.repaint();
        Desktop.revalidate();

        top_Desktop.removeAll();
        top_Desktop.repaint();
        top_Desktop.revalidate();

        top_Desktop.add(top_attendanceReport);
        top_Desktop.repaint();
        top_Desktop.revalidate();
    }//GEN-LAST:event_attendanceReportLabelMousePressed

    private void completedStudentsLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_completedStudentsLabelMousePressed
        setColor(completedStudentsMenu);
        in_menuCompletedStudents.setOpaque(true);
        restColor(new JPanel[]{addStudentMenu, viewStudentMenu, attendanceReportMenu, takeAttendanceMenu},
                new JPanel[]{in_menuAddStudent, in_menuViewStudent, in_menuAttendanceReport, in_menuTakeAttendance});
        LabelCardView1.setText("/ Completed Students");

        Desktop.removeAll();
        Desktop.repaint();
        Desktop.revalidate();

        Desktop.add(desk_completedStudents);
        Desktop.repaint();
        Desktop.revalidate();

        top_Desktop.removeAll();
        top_Desktop.repaint();
        top_Desktop.revalidate();

        top_Desktop.add(top_completedStudents);
        top_Desktop.repaint();
        top_Desktop.revalidate();
    }//GEN-LAST:event_completedStudentsLabelMousePressed

    private void text_courseNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_courseNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_courseNameActionPerformed

    private void resetLabel_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetLabel_ButtonMouseClicked
        clearData();

        setHolder();
    }//GEN-LAST:event_resetLabel_ButtonMouseClicked

    private void resetIcon_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetIcon_ButtonMouseClicked
        clearData();
        setHolder();
    }//GEN-LAST:event_resetIcon_ButtonMouseClicked

    private void submitLabel_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitLabel_ButtonMouseClicked
        String firstName = text_firstName.getText();
        String fatherName = text_fatherName.getText();
        String qualification = text_qualification.getText();
        String courseName = text_courseName.getText();
        String duration = text_duration.getText();
        String timing = text_timing.getText();
        String mobileNo = text_mobileNo.getText();
        String reference = text_reference.getText();
        String address = area_address.getText();
        String keyvalue = "1";
        String staffName = text_staffname.getText();
        male_button.setActionCommand("Male");
        female_button.setActionCommand("Female");
        others_button.setActionCommand("Other's");
        String gender = buttonGroup1.getSelection().getActionCommand();
        fastTrack_button.setActionCommand("F");
        normalTrack_button.setActionCommand("N");
        String track = buttonGroup2.getSelection().getActionCommand();
        Date getDob = jDateChooser_dob.getDate();
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        String dob = df.format(getDob);
        String nationality = "Indian";
        String courseStatus = "Not-Completed";
        String certificateStatus = "Not-Issued";
        String certificateDate = "00/00/0000";

        if (firstName.trim().isEmpty() | fatherName.trim().isEmpty() | qualification.trim().isEmpty()
                | courseName.trim().isEmpty() | duration.trim().isEmpty() | timing.trim().isEmpty()
                | mobileNo.trim().isEmpty() | reference.trim().isEmpty() | address.trim().isEmpty()
                | dob.trim().isEmpty()) {
            text_firstName.setBorder(BorderFactory.createTitledBorder(null, "first Name", TitledBorder.LEFT, TitledBorder.BELOW_BOTTOM, new Font("times new roman", Font.PLAIN, 12), Color.red));
            //text_firstName.setBorder(BorderFactory.createLineBorder(Color.red));
            text_fatherName.setBorder(BorderFactory.createLineBorder(Color.red));
            text_qualification.setBorder(BorderFactory.createLineBorder(Color.red));
            text_duration.setBorder(BorderFactory.createLineBorder(Color.red));
            text_timing.setBorder(BorderFactory.createLineBorder(Color.red));
            text_mobileNo.setBorder(BorderFactory.createLineBorder(Color.red));
            text_reference.setBorder(BorderFactory.createLineBorder(Color.red));
            area_address.setBorder(BorderFactory.createLineBorder(Color.red));
            text_courseName.setBorder(BorderFactory.createLineBorder(Color.red));
        } else {

            try {
                conn = SQLiteDBConnection.connect();
                String insertQuery = "Insert Into student_details (firstName,fathersName,mobile,gender,"
                        + "dob,address,course,courseTime,timeTrack,duration,reference,nationality,qualification,keyvalue,staffname"
                        + ",courseStatus,certificateStatus,certificateDate) "
                        + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                pst = conn.prepareStatement(insertQuery);
                pst.setString(1, firstName);
                pst.setString(2, fatherName);
                pst.setString(3, mobileNo);
                pst.setString(4, gender);
                pst.setString(5, dob);
                pst.setString(6, address);
                pst.setString(7, courseName);
                pst.setString(8, timing);
                pst.setString(9, track);
                pst.setString(10, duration);
                pst.setString(11, reference);
                pst.setString(12, nationality);
                pst.setString(13, qualification);
                pst.setString(14, keyvalue);
                pst.setString(15, staffName);
                pst.setString(16, courseStatus);
                pst.setString(17, certificateStatus);
                pst.setString(18, certificateDate);
                pst.execute();
                pst.close();
                conn.close();
                clearData();
                setHolder();
                ImageIcon iconic = new ImageIcon(Home.class.getResource("/images/icons8-user.png"));
                JOptionPane.showMessageDialog(null, "Data Inserted Successfully", "Lets Go", JOptionPane.INFORMATION_MESSAGE, iconic);
                tableData();
            } catch (Exception ex) {
                ImageIcon iconic = new ImageIcon(Home.class.getResource("/images/icons8-user.png"));
                JOptionPane.showMessageDialog(null, "Input field can't be leave empty", "Null Value", JOptionPane.INFORMATION_MESSAGE, iconic);
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_submitLabel_ButtonMouseClicked

    private void text_referenceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_referenceKeyReleased

    }//GEN-LAST:event_text_referenceKeyReleased

    private void students_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_students_tableMouseClicked

        submitandUpdate.removeAll();
        submitandUpdate.repaint();
        submitandUpdate.revalidate();

        submitandUpdate.add(Update_panel);
        submitandUpdate.repaint();
        submitandUpdate.revalidate();
        int index = students_table.getSelectedRow();

        model = students_table.getModel();

        String tableRef = model.getValueAt(index, 0).toString();

        String selectQry = "Select * from student_details where reference='" + tableRef + "';";
        try {
            conn = SQLiteDBConnection.connect();
            pst = conn.prepareStatement(selectQry);
            rst = pst.executeQuery();
            if (rst.next()) {
                text_firstName.setText(rst.getString(2));
                text_fatherName.setText(rst.getString(3));
                jDateChooser_dob.setDate(new SimpleDateFormat("dd/MM/yyyy").parse(rst.getString(6)));
                text_qualification.setText(rst.getString(14));
                text_mobileNo.setText(rst.getString(4));
                area_address.setText(rst.getString(8));
                text_courseName.setText(rst.getString(9));
                text_duration.setText(rst.getString(12));
                text_timing.setText(rst.getString(10));
                text_reference.setText(rst.getString(13));
                text_staffname.setText(rst.getString(17));
                String sex = rst.getString(5);
                if (sex.equals("Male")) {
                    male_button.setSelected(true);
                } else if (sex.equals("Female")) {
                    female_button.setSelected(true);
                } else {
                    others_button.setSelected(true);
                }
                String coursetrack = rst.getString(11);
                if (coursetrack.equals("F")) {
                    fastTrack_button.setSelected(true);
                } else {
                    normalTrack_button.setSelected(true);
                }
                pst.close();
                conn.close();

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_students_tableMouseClicked


    private void updateLabel_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateLabel_ButtonMouseClicked
        updateRecord();
    }//GEN-LAST:event_updateLabel_ButtonMouseClicked

    private void deleteLabel_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteLabel_buttonMouseClicked
        // TODO add your handling code here:
        int index = students_table.getSelectedRow();

        String uname;
        model = students_table.getModel();

        String tableRef = model.getValueAt(index, 0).toString();

        String selectQry = "Select * from student_details where reference='" + tableRef + "';";

        try {
            conn = SQLiteDBConnection.connect();
            pst = conn.prepareStatement(selectQry);
            rst = pst.executeQuery();
            if (rst.next()) {
                uname = rst.getString(2);
                deleteRecord(uname);
            }

            pst.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_deleteLabel_buttonMouseClicked

    private void updateIcon_ButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateIcon_ButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_updateIcon_ButtonMouseClicked

    private void search_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_textKeyReleased

        String query = search_text.getText().toLowerCase();
        filterData(query);
    }//GEN-LAST:event_search_textKeyReleased

    private void recordSerach_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordSerach_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recordSerach_textActionPerformed

    private void recordSerach_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_recordSerach_textKeyReleased
        // TODO add your handling code here:
        findStudents();
    }//GEN-LAST:event_recordSerach_textKeyReleased

    private void viewStudents_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewStudents_TableMouseClicked
        ViewStudent_row_data viewStudent_row = new ViewStudent_row_data();
        int index = viewStudents_Table.getSelectedRow();
        model = viewStudents_Table.getModel();
        String tableRef = model.getValueAt(index, 6).toString();
        String sampleReference;
//        ImageIcon iconic = new ImageIcon(Home.class.getResource("/images/icons8-user.png"));
//        JOptionPane.showMessageDialog(null, "Reference Number : "+tableRef, "Sorry", JOptionPane.INFORMATION_MESSAGE, iconic);

        String selectQry = "Select * from student_details where reference='" + tableRef + "';";
        try {
            conn = SQLiteDBConnection.connect();
            pst = conn.prepareStatement(selectQry);
            rst = pst.executeQuery();
            if (rst.next()) {
                viewStudent_row.setVisible(true);
                viewStudent_row.pack();
                viewStudent_row.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                viewStudent_row.text_firstName.setText(rst.getString(2));
                viewStudent_row.text_fatherName.setText(rst.getString(3));
                viewStudent_row.jDateChooser_dob.setDate(new SimpleDateFormat("dd/MM/yyyy").parse(rst.getString(6)));
                viewStudent_row.text_mobileNo.setText(rst.getString(4));
                viewStudent_row.text_courseName.setText(rst.getString(9));
                viewStudent_row.text_duration.setText(rst.getString(12));
                viewStudent_row.text_timing.setText(rst.getString(10));
                viewStudent_row.text_reference.setText(rst.getString(13));
                sampleReference = rst.getString(13);
                viewStudent_row.setReference(sampleReference);
                viewStudent_row.text_staffname.setText(rst.getString(17));
                viewStudent_row.CourseStatus_list.setSelectedItem(rst.getString(19));
                viewStudent_row.certificateStatus_list.setSelectedItem(rst.getString(18));
                viewStudent_row.jDateChooser_certificate.setDate(new SimpleDateFormat("dd/MM/yyyy").parse(rst.getString(20)));
                pst.close();
                conn.close();

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_viewStudents_TableMouseClicked

    private void jPanel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel3MousePressed

    private void kButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kButton1MouseClicked
        // TODO add your handling code here:
        selectData();
    }//GEN-LAST:event_kButton1MouseClicked

    private void attendanceSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_attendanceSearchKeyReleased
        // TODO add your handling code here:
        AttendanceStudents();
    }//GEN-LAST:event_attendanceSearchKeyReleased

    private void getSelectRecord_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_getSelectRecord_buttonMouseClicked
        // TODO add your handling code here:

        String dateTaken = attenddates;
        String selectedValue[] = new String[attendanceTable.getRowCount()];
        String checkedValue[] = new String[attendanceTable.getRowCount()];         //Having absent list of students
        String unselectedValue[] = new String[attendanceTable.getRowCount()];      //Having present list of students
        try {
            conn = SQLiteDBConnection.connect();
            for (int i = 0; i < attendanceTable.getRowCount(); i++) {
                Boolean checked = Boolean.valueOf(attendanceTable.getValueAt(i, 0).toString());
                String colValue = attendanceTable.getValueAt(i, 1).toString();
                selectedValue[i] = attendanceTable.getValueAt(i, 4).toString();

                if (checked == true) {
                    checkedValue[i] = selectedValue[i];
                    JOptionPane.showMessageDialog(null, "Name:" + colValue + "\n Reference Number:" + checkedValue[i]);

                } else {
                    unselectedValue[i] = selectedValue[i];
                    JOptionPane.showMessageDialog(null, "Name:" + colValue + "\n Reference Number:" + unselectedValue[i]);

                }

            }

            //insert reference number of checked student (absent students)
            for (int j = 0; j < checkedValue.length; j++) {
                String chvl = checkedValue[j];
                String checkedInsert = "insert into attendanceReport(reference) select reference from student_details  where reference ='" + chvl + "'";
                pst = conn.prepareStatement(checkedInsert);
                pst.execute();
            }
            pst.close();

            //Updating the table data in attendance Report Using CkeckedReference (Absenties)
            for (int j = 0; j < checkedValue.length; j++) {
                String chvl = checkedValue[j];
                String checkedUpdate = "update attendanceReport set student_present='" + "NILL" + "',student_absent='" + "Absent" + "',dateTaken=? where reference ='" + chvl + "'";
                pst = conn.prepareStatement(checkedUpdate);
                pst.setString(1, dateTaken);
                pst.execute();
            }
            pst.close();

            //insert reference number of checked student (absent students)
            for (int j = 0; j < unselectedValue.length; j++) {
                String chvl = unselectedValue[j];
                String uncheckedInsert = "insert into attendanceReport(reference) select reference from student_details  where reference ='" + chvl + "'";
                pst = conn.prepareStatement(uncheckedInsert);
                pst.execute();
            }
            pst.close();

            //Updating the table data in attendance Report Using UnCkeckedReference (Present)
            for (int j = 0; j < unselectedValue.length; j++) {
                String chvl = unselectedValue[j];
                String UncheckedUpdate = "update attendanceReport set student_present='" + "Present" + "',student_absent='" + "NILL" + "',dateTaken=? where reference ='" + chvl + "'";
                pst = conn.prepareStatement(UncheckedUpdate);
                pst.setString(1, dateTaken);
                pst.execute();
            }
            pst.close();
            AttendanceStudents();
            ImageIcon iconic = new ImageIcon(Home.class.getResource("/images/icons8-user.png"));
            JOptionPane.showMessageDialog(null, "Attendance have been enrolled successfully!!..", "Success", JOptionPane.INFORMATION_MESSAGE, iconic);
            conn.close();

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_getSelectRecord_buttonMouseClicked

    private void attendanceSearchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attendanceSearchButtonMouseClicked
        // TODO add your handling code here:
        attendanceFindReport();
    }//GEN-LAST:event_attendanceSearchButtonMouseClicked

    private void refresh_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_btnMouseClicked

        findStudents();
    }//GEN-LAST:event_refresh_btnMouseClicked

    private void completedRecordSearch_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_completedRecordSearch_textKeyReleased
        findCompletedStudents();
    }//GEN-LAST:event_completedRecordSearch_textKeyReleased

    private void filterData(String query) {
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
        students_table.setRowSorter(sorter);
        sorter.setRowFilter(RowFilter.regexFilter(query));
    }

    public void selectData() {
        String ref = text_reference.getText();
        String selectQry = "Select reference from student_details where reference='" + ref + "';";
        try {
            conn = SQLiteDBConnection.connect();
            pst = conn.prepareStatement(selectQry);
            rst = pst.executeQuery();
            if (rst.next()) {
                ImageIcon iconic = new ImageIcon(Home.class.getResource("/images/icons8-user.png"));
                JOptionPane.showMessageDialog(null, "Reference Number Already Exist", "Sorry", JOptionPane.INFORMATION_MESSAGE, iconic);
                text_reference.setBorder(BorderFactory.createLineBorder(Color.red));
            } else {
                text_reference.setBorder(BorderFactory.createLineBorder(Color.GREEN));
                pst.close();
                conn.close();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void tableData() {
        String getSelect = "Select reference as 'Reference No',firstName as 'First Name',mobile as 'Mobile',"
                + "course as 'Course',courseTime as 'Timing',duration as 'Duration'  from student_details where keyvalue = 1;";
        try {
            conn = SQLiteDBConnection.connect();
            pst = conn.prepareStatement(getSelect);
            rst = pst.executeQuery();
            students_table.setModel(DbUtils.resultSetToTableModel(rst));
            pst.close();
            conn.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void setHolder() {
        //holder = new PlaceHolder(text_firstName, "Enter your First Name..");
//        holder = new PlaceHolder(text_fatherName, "Enter your Father's Name..");
//        holder = new PlaceHolder(text_qualification, "Enter your Qualification..");
//        holder = new PlaceHolder(text_mobileNo, "Enter your Mobile Number..");
//        holder = new PlaceHolder(area_address, "Enter your Address Here..");
//        holder = new PlaceHolder(text_courseName, "Enter your Course Name..");
//        holder = new PlaceHolder(text_duration, "Course Duration");
//        holder = new PlaceHolder(text_timing, "0 AM - 0 PM");
//        holder = new PlaceHolder(text_reference, "ASVKS00000");
        holder = new PlaceHolder(search_text, "Search Here");
//       holder = new PlaceHolder(recordSerach_text, "Search Here!..");
    }

    public void clearData() {
        text_firstName.setText("");
        text_fatherName.setText("");
        text_qualification.setText("");
        text_courseName.setText("");
        text_duration.setText("");
        text_mobileNo.setText("");
        text_reference.setText("");
        text_timing.setText("");
        area_address.setText("");
        text_staffname.setText("");
        jDateChooser_dob.setCalendar(null);
        submitandUpdate.removeAll();
        submitandUpdate.repaint();
        submitandUpdate.revalidate();
        text_reference.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        submitandUpdate.add(submit_panel);
        submitandUpdate.repaint();
        submitandUpdate.revalidate();
        buttonGroup1.clearSelection();
        buttonGroup2.clearSelection();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserPanel().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Desktop;
    private javax.swing.JLabel LabelCardView1;
    private javax.swing.JLabel Logout;
    private javax.swing.JPanel Update_panel;
    private javax.swing.JLabel UserPanelWindowClose;
    private javax.swing.JLabel UserPanelWindowMinimize;
    private javax.swing.JLabel addStudentLabel;
    private javax.swing.JPanel addStudentMenu;
    private javax.swing.JLabel address_label;
    private javax.swing.JTextArea area_address;
    private javax.swing.JLabel attendanceReportLabel;
    private javax.swing.JPanel attendanceReportMenu;
    private javax.swing.JTable attendanceReport_table;
    private javax.swing.JTextField attendanceSearch;
    private keeptoo.KButton attendanceSearchButton;
    private javax.swing.JTable attendanceTable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField completedRecordSearch_text;
    private javax.swing.JLabel completedStudentsLabel;
    private javax.swing.JPanel completedStudentsMenu;
    private javax.swing.JTable completed_studentsTable;
    private javax.swing.JLabel course_label1;
    private javax.swing.JLabel course_label2;
    private javax.swing.JLabel deleteLabel;
    private javax.swing.JLabel deleteLabel_button;
    private javax.swing.JPanel desk_Blank;
    private javax.swing.JPanel desk_addStudent;
    private javax.swing.JPanel desk_attendanceReport;
    private javax.swing.JPanel desk_completed;
    private javax.swing.JPanel desk_completedStudents;
    private javax.swing.JPanel desk_takeAttendance;
    private javax.swing.JPanel desk_viewStudent;
    private javax.swing.JLabel dob_label;
    private javax.swing.JRadioButton fastTrack_button;
    private javax.swing.JLabel fathersname_label1;
    private javax.swing.JLabel fathersname_label2;
    private javax.swing.JRadioButton female_button;
    private javax.swing.JLabel firstname_label;
    private javax.swing.JTextField fromDateText;
    private javax.swing.JLabel gender_label1;
    private javax.swing.JPanel gender_panel;
    private keeptoo.KButton getSelectRecord_button;
    private javax.swing.JPanel in_menuAddStudent;
    private javax.swing.JPanel in_menuAttendanceReport;
    private javax.swing.JPanel in_menuCompletedStudents;
    private javax.swing.JPanel in_menuTakeAttendance;
    private javax.swing.JPanel in_menuViewStudent;
    private com.toedter.calendar.JDateChooser jDateChooser_dob;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private keeptoo.KButton kButton1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    private javax.swing.JLabel labelCardView;
    private javax.swing.JPanel leftMainPanel;
    private javax.swing.JRadioButton male_button;
    private javax.swing.JLabel mobile_label;
    private javax.swing.JRadioButton normalTrack_button;
    private javax.swing.JRadioButton others_button;
    private javax.swing.JLabel qualification_label;
    private javax.swing.JTextField recordSerach_text;
    private javax.swing.JLabel reference_label;
    private keeptoo.KButton refresh_btn;
    private javax.swing.JLabel resetIcon_Button;
    private javax.swing.JLabel resetLabel_Button;
    private javax.swing.JPanel reset_panel;
    private javax.swing.JTextField search_text;
    private javax.swing.JTextField staffSearch_text;
    private javax.swing.JTable students_table;
    private javax.swing.JLabel submitIcon_Button;
    private javax.swing.JLabel submitLabel_Button;
    private javax.swing.JPanel submit_panel;
    private javax.swing.JPanel submitandUpdate;
    private javax.swing.JLabel takeAttendanceLabel;
    private javax.swing.JPanel takeAttendanceMenu;
    private javax.swing.JTextField text_courseName;
    private javax.swing.JTextField text_duration;
    private javax.swing.JTextField text_fatherName;
    private javax.swing.JTextField text_firstName;
    private javax.swing.JTextField text_mobileNo;
    private javax.swing.JTextField text_qualification;
    private javax.swing.JTextField text_reference;
    private javax.swing.JTextField text_staffname;
    private javax.swing.JTextField text_timing;
    private javax.swing.JTextField toDateText;
    private javax.swing.JPanel top_Desktop;
    private javax.swing.JPanel top_addStudent;
    private javax.swing.JLabel top_addStudentLabel;
    private javax.swing.JPanel top_attendanceReport;
    private javax.swing.JLabel top_attendanceReportLabel;
    private javax.swing.JPanel top_blank;
    private javax.swing.JPanel top_completedStudents;
    private javax.swing.JLabel top_completedStudentsLabel;
    private javax.swing.JPanel top_takeAttendance;
    private javax.swing.JLabel top_takeAttenedanceLabel;
    private javax.swing.JPanel top_viewStudent;
    private javax.swing.JLabel top_viewStudentLabel;
    private javax.swing.JLabel updateIcon_Button;
    private javax.swing.JLabel updateLabel_Button;
    private javax.swing.JLabel userLabel;
    private javax.swing.JLabel viewStudentLabel;
    private javax.swing.JPanel viewStudentMenu;
    private javax.swing.JTable viewStudents_Table;
    private javax.swing.JPanel viewTopPanel;
    // End of variables declaration//GEN-END:variables

    void UserNameDisplay(String Uname) {
        userLabel.setText(Uname);
        labelCardView.setText(Uname);
    }

    private void setColor(JPanel pane) {

        pane.setBackground(new Color(98, 43, 222));

    }

    private void restColor(JPanel[] pane, JPanel[] indicators) {
        for (int i = 0; i < pane.length; i++) {
            pane[i].setBackground(new Color(35, 3, 106));
        }

        for (int i = 0; i < indicators.length; i++) {
            indicators[i].setOpaque(false);
        }
    }

    public void updateRecord() {
        String firstName = text_firstName.getText();
        String fatherName = text_fatherName.getText();
        String qualification = text_qualification.getText();
        String courseName = text_courseName.getText();
        String duration = text_duration.getText();
        String timing = text_timing.getText();
        String mobileNo = text_mobileNo.getText();
        String reference = text_reference.getText();
        String address = area_address.getText();
        male_button.setActionCommand("Male");
        female_button.setActionCommand("Female");
        others_button.setActionCommand("Other's");
        String gender = buttonGroup1.getSelection().getActionCommand();
        fastTrack_button.setActionCommand("F");
        normalTrack_button.setActionCommand("N");
        String track = buttonGroup2.getSelection().getActionCommand();
        Date getDob = jDateChooser_dob.getDate();
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        String dob = df.format(getDob);
        String nationality = "Indian";
        if (firstName.trim().isEmpty() | fatherName.trim().isEmpty() | qualification.trim().isEmpty()
                | courseName.trim().isEmpty() | duration.trim().isEmpty() | timing.trim().isEmpty()
                | mobileNo.trim().isEmpty() | reference.trim().isEmpty() | address.trim().isEmpty()
                | dob.trim().isEmpty()) {
            text_firstName.setBorder(BorderFactory.createTitledBorder(null, "first Name", TitledBorder.LEFT, TitledBorder.BELOW_BOTTOM, new Font("times new roman", Font.PLAIN, 12), Color.red));
            //text_firstName.setBorder(BorderFactory.createLineBorder(Color.red));
            text_fatherName.setBorder(BorderFactory.createLineBorder(Color.red));
            text_qualification.setBorder(BorderFactory.createLineBorder(Color.red));
            text_duration.setBorder(BorderFactory.createLineBorder(Color.red));
            text_timing.setBorder(BorderFactory.createLineBorder(Color.red));
            text_mobileNo.setBorder(BorderFactory.createLineBorder(Color.red));
            text_reference.setBorder(BorderFactory.createLineBorder(Color.red));
            area_address.setBorder(BorderFactory.createLineBorder(Color.red));
            text_courseName.setBorder(BorderFactory.createLineBorder(Color.red));
        } else {

            try {
                int index = students_table.getSelectedRow();

                model = students_table.getModel();

                String tableRef = model.getValueAt(index, 0).toString();
                conn = SQLiteDBConnection.connect();
                String updateQuery = "update student_details set firstName=?,fathersName=?,mobile=?,gender=?,"
                        + "dob=?,address=?,course=?,courseTime=?,timeTrack=?,duration=?,reference=?,nationality=?,"
                        + "qualification=? where reference='" + tableRef + "';";
                pst = conn.prepareStatement(updateQuery);
                pst.setString(1, firstName);
                pst.setString(2, fatherName);
                pst.setString(3, mobileNo);
                pst.setString(4, gender);
                pst.setString(5, dob);
                pst.setString(6, address);
                pst.setString(7, courseName);
                pst.setString(8, timing);
                pst.setString(9, track);
                pst.setString(10, duration);
                pst.setString(11, reference);
                pst.setString(12, nationality);
                pst.setString(13, qualification);
                pst.execute();
                pst.close();
                conn.close();
                clearData();
//                setHolder();
                ImageIcon iconic = new ImageIcon(Home.class.getResource("/images/icons8-user.png"));
                JOptionPane.showMessageDialog(null, "Data Updated Successfully", "Lets Go", JOptionPane.INFORMATION_MESSAGE, iconic);
                tableData();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }

    public void settime() {

        final DateFormat timeFormat = new SimpleDateFormat("hh:mm:ss");
        ActionListener actiondate = new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                Date dates = new Date();
                String time = timeFormat.format(dates);
//                viewTimeLabel.setText(time);
            }
        };
        new javax.swing.Timer(1000, actiondate).start();
    }

    public void setdate() {

        final DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        ActionListener actiondate = new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                Date dates = new Date();
                attenddates = dateFormat.format(dates);
//                viewDateLabel.setText(datesa);

            }

        };
        new javax.swing.Timer(1000, actiondate).start();
    }

    private void deleteRecord(String uname) {
        int index = students_table.getSelectedRow();
        String keyval = "0";

        model = students_table.getModel();

        String tableRef = model.getValueAt(index, 0).toString();
        System.out.print("Value=" + model.getValueAt(index, 0).toString());
        String deleteQry = "update student_details set keyvalue = '" + keyval + "' where reference='" + tableRef + "';";
        int p = JOptionPane.showConfirmDialog(null, "Do you want to delete ( Name: '" + uname + "')", "Delete", JOptionPane.YES_NO_OPTION);
        try {
            if (p == JOptionPane.YES_OPTION) {
                pst = conn.prepareStatement(deleteQry);
                pst.execute();
                ImageIcon iconic = new ImageIcon(Home.class.getResource("/images/icons8-user.png"));
                JOptionPane.showMessageDialog(null, "Record Deleted Successfully", "Deleted", JOptionPane.INFORMATION_MESSAGE, iconic);
                pst.close();
                conn.close();
            } else {
                remove(p);
            }

        } catch (SQLException ex) {
            Logger.getLogger(UserPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

        clearData();
        tableData();
    }

    public ArrayList<attendanceRportClass> ListAttendanceReport(String fromDate, String toDate,String staffName) {
        ArrayList<attendanceRportClass> studentsList = new ArrayList<attendanceRportClass>();
        conn = SQLiteDBConnection.connect();

        String searchQuery = "select s.firstName,s.course,s.reference,s.staffname,a.student_present,a.student_absent,a.dateTaken "
                + "from student_details s left join attendanceReport a on s.reference = a.reference where s.keyvalue = 1 "
                + "and staffname like '%" + staffName + "%' and a.dateTaken between '" + fromDate + "' and '" + toDate + "'";
        try {
            pst = conn.prepareStatement(searchQuery);
            rst = pst.executeQuery();
            attendanceRportClass attendReport;
            if (rst.next()) {
                while (rst.next()) {
                    attendReport = new attendanceRportClass(
                            rst.getString("firstName"),
                            rst.getString("course"),
                            rst.getString("reference"),
                            rst.getString("staffname"),
                            rst.getString("student_present"),
                            rst.getString("student_absent"),
                            rst.getString("dateTaken")
                    );
                    studentsList.add(attendReport);
                }
            } else {
                ImageIcon iconic = new ImageIcon(Home.class.getResource("/images/icons8-user.png"));
                JOptionPane.showMessageDialog(null, "\tNo Record Found\nFrom Date : " + fromDate + " To Date : " + toDate, "No Data", JOptionPane.INFORMATION_MESSAGE, iconic);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return studentsList;
    }

    private void attendanceFindReport() {

        ArrayList<attendanceRportClass> viewStudents = ListAttendanceReport(fromDateText.getText(), toDateText.getText(),staffSearch_text.getText());
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"First Name", "Course Name", "Reference", "Staff Name", "Present Status", "Absent Status", "Date Of Attendance"});
        Object[] row = new Object[7];
        for (int i = 0; i < viewStudents.size(); i++) {
            row[0] = viewStudents.get(i).getFirstName();
            row[1] = viewStudents.get(i).getCourseName();
            row[2] = viewStudents.get(i).getReference();
            row[3] = viewStudents.get(i).getStaffName();
            row[4] = viewStudents.get(i).getPresentStatus();
            row[5] = viewStudents.get(i).getAbsentStatus();
            row[6] = viewStudents.get(i).getDateOfAttendance();
            model.addRow(row);
        }
        attendanceReport_table.setModel(model);
    }

    public ArrayList<students> ListCompletedStudents(String valuetoSearch) {
        ArrayList<students> CompletedstudentsList = new ArrayList<students>();
        String status = "Completed";
        String selectQuery = "select * from student_details where keyvalue = 1 and courseStatus='" + status + "' "
                + "and firstName || fathersName ||mobile || dob || course ||reference || "
                + "courseTime ||duration ||staffname ||courseStatus ||certificateStatus ||"
                + "certificateDate  like '%" + valuetoSearch + "%'";
        try {

            conn = SQLiteDBConnection.connect();
            pst = conn.prepareStatement(selectQuery);
            rst = pst.executeQuery();

            students stud;

            while (rst.next()) {
                stud = new students(
                        rst.getString("firstName"),
                        rst.getString("fathersName"),
                        rst.getString("mobile"),
                        rst.getString("dob"),
                        rst.getString("course"),
                        rst.getString("reference"),
                        rst.getString("courseTime"),
                        rst.getString("duration"),
                        rst.getString("staffname"),
                        rst.getString("courseStatus"),
                        rst.getString("certificateStatus"),
                        rst.getString("certificateDate")
                );
                CompletedstudentsList.add(stud);
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return CompletedstudentsList;
    }

    public void findCompletedStudents() {
    
        ArrayList<students> viewCompltedStudents = ListCompletedStudents(completedRecordSearch_text.getText());
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"First Name", "Father's Name", "Mobile", "DOB", "Course", "Course Timing", "Reference No", "Duration", "Staff", "Certificate", "Course", "Issued Date"});
        Object[] row = new Object[12];
        for (int i = 0; i < viewCompltedStudents.size(); i++) {
            row[0] = viewCompltedStudents.get(i).getFirstName();
            row[1] = viewCompltedStudents.get(i).getFathersName();
            row[2] = viewCompltedStudents.get(i).getMobile();
            row[3] = viewCompltedStudents.get(i).getDob();
            row[4] = viewCompltedStudents.get(i).getCourse();
            row[5] = viewCompltedStudents.get(i).getCourseTime();
            row[6] = viewCompltedStudents.get(i).getReference();
            row[7] = viewCompltedStudents.get(i).getDuration();
            row[8] = viewCompltedStudents.get(i).getStaffname();
            row[9] = viewCompltedStudents.get(i).getCertificateStatus();
            row[10] = viewCompltedStudents.get(i).getCourseStatus();
            row[11] = viewCompltedStudents.get(i).getCertificateDate();
            model.addRow(row);
        }
        completed_studentsTable.setModel(model);
    }

    public ArrayList<students> ListStudents(String valuetoSearch) {
        ArrayList<students> studentsList = new ArrayList<students>();
        conn = SQLiteDBConnection.connect();
        String Cs = "Not-Completed";
        String serachQuery = "select * from student_details where keyvalue = 1 and courseStatus='" + Cs + "' and firstName || fathersName ||mobile || dob || course ||reference || courseTime ||duration ||staffname ||courseStatus ||certificateStatus ||certificateDate  like '%" + valuetoSearch + "%'";
        try {
            pst = conn.prepareStatement(serachQuery);
            rst = pst.executeQuery();

            students stud;

            while (rst.next()) {
                stud = new students(
                        rst.getString("firstName"),
                        rst.getString("fathersName"),
                        rst.getString("mobile"),
                        rst.getString("dob"),
                        rst.getString("course"),
                        rst.getString("reference"),
                        rst.getString("courseTime"),
                        rst.getString("duration"),
                        rst.getString("staffname"),
                        rst.getString("courseStatus"),
                        rst.getString("certificateStatus"),
                        rst.getString("certificateDate")
                );
                studentsList.add(stud);
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return studentsList;
    }

    public void findStudents() {
        ArrayList<students> viewStudents = ListStudents(recordSerach_text.getText());
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(new Object[]{"First Name", "Father's Name", "Mobile", "DOB", "Course", "Course Timing", "Reference No", "Duration", "Staff"});
        Object[] row = new Object[9];
        for (int i = 0; i < viewStudents.size(); i++) {
            row[0] = viewStudents.get(i).getFirstName();
            row[1] = viewStudents.get(i).getFathersName();
            row[2] = viewStudents.get(i).getMobile();
            row[3] = viewStudents.get(i).getDob();
            row[4] = viewStudents.get(i).getCourse();
            row[5] = viewStudents.get(i).getCourseTime();
            row[6] = viewStudents.get(i).getReference();
            row[7] = viewStudents.get(i).getDuration();
            row[8] = viewStudents.get(i).getStaffname();
           
            model.addRow(row);
        }
        viewStudents_Table.setModel(model);
    }

    private void AttendanceStudents() {
        ArrayList<students> attendStud = ListStudents(attendanceSearch.getText());
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public Class<?> getColumnClass(int column) {
                switch (column) {
                    case 0:
                        return Boolean.class;
                    case 1:
                        return String.class;
                    case 2:
                        return String.class;
                    case 3:
                        return String.class;
                    case 4:
                        return String.class;
                    case 5:
                        return String.class;

                    default:
                        return String.class;
                }
            }
        };

        attendanceTable.setModel(model);
        model.addColumn("Select");
        model.addColumn("First Name");
        model.addColumn("Course Name");
        model.addColumn("Course Timing");
        model.addColumn("Reference Number");
        model.addColumn("Staff Name");

        for (int i = 0; i < attendStud.size(); i++) {
            model.addRow(new Object[0]);
            model.setValueAt(false, i, 0);
            model.setValueAt(attendStud.get(i).getFirstName(), i, 1);
            model.setValueAt(attendStud.get(i).getCourse(), i, 2);
            model.setValueAt(attendStud.get(i).getCourseTime(), i, 3);
            model.setValueAt(attendStud.get(i).getReference(), i, 4);
            model.setValueAt(attendStud.get(i).getStaffname(), i, 5);
        }

    }

}
